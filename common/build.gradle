    architectury {
        common(rootProject.enabled_platforms.split(","))
    }

    loom {
        accessWidenerPath = file("src/main/resources/servein.accesswidener")
    }

    dependencies {
        // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
        // Do NOT use other classes from fabric loader
        modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
        // Remove the next line if you don't want to depend on the API
        modApi "dev.architectury:architectury:${rootProject.architectury_version}"

        // MidnightLib
        // Fabric is picked but it doesn't really matter - this is replaced with each loader's correct version for the built jars.
        modCompileOnly "maven.modrinth:midnightlib:${rootProject.midnightlib_version}-fabric"
    }

    publishing {
        publications {
            mavenCommon(MavenPublication) {
                artifactId = rootProject.archives_base_name
                from components.java
            }
        }

        // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
        repositories {
            // Add repositories to publish to here.
        }
    }

    repositories {
        mavenCentral()
    }
